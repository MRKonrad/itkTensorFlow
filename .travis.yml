language: cpp

os:
  - linux
  - osx

compiler:
  - gcc
  - clang

env:
  global:
    - exe_extended_name: itkTensorFlowExe_${TRAVIS_BRANCH}_${TRAVIS_OS_NAME}
    - lib_extended_name: itkTensorFlowLib_${TRAVIS_BRANCH}_${TRAVIS_OS_NAME}
    - secure: ${GH_PERSONAL_ACCESS_TOKEN}

install:
  # download ITK
  - cd ${TRAVIS_BUILD_DIR}/..
  - curl -L -O http://mrkonrad.github.io/MRKonrad/files/ITK_built/ITK413_${TRAVIS_OS_NAME}_install.zip
  - unzip -a -q ITK413_${TRAVIS_OS_NAME}_install.zip
  - cd ${TRAVIS_BUILD_DIR}/thirdParty/googletest

script:
  - cd ${TRAVIS_BUILD_DIR}
  - cmake . -Bbin -DITK_DIR_HINTS="../ITK_install" -DCMAKE_INSTALL_PREFIX=${TRAVIS_BUILD_DIR}/bin/install
  - cmake --build bin --config RELEASE --target itkTensorFlowTests
  - cd bin/tests
  - ./itkTensorFlowTests
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      cd ${TRAVIS_BUILD_DIR}/bin;
      ls;
      objdump -T libitkTensorFlowLib.so;
    fi

before_deploy:
  - cd ${TRAVIS_BUILD_DIR}
  - cmake --build bin --config RELEASE --target install
  - ls ${TRAVIS_BUILD_DIR}/bin/install
  - ls ${TRAVIS_BUILD_DIR}/bin/install/bin
  - ls ${TRAVIS_BUILD_DIR}/bin/install/lib
  - ls ${TRAVIS_BUILD_DIR}/bin/install/include

  - cd ${TRAVIS_BUILD_DIR}/bin/install/bin
  - zip -r itkTensorFlowExe.zip *
  - cd ${TRAVIS_BUILD_DIR}/bin/install
  - zip -r itkTensorFlowLib.zip lib include

  - cd ${TRAVIS_BUILD_DIR}
  - mkdir deployment

  - cp ${TRAVIS_BUILD_DIR}/bin/install/bin/itkTensorFlowExe.zip ${TRAVIS_BUILD_DIR}/deployment/${exe_extended_name}.zip
  - cp ${TRAVIS_BUILD_DIR}/bin/install/itkTensorFlowLib.zip ${TRAVIS_BUILD_DIR}/deployment/${lib_extended_name}.zip
  - ls ${TRAVIS_BUILD_DIR}
  - ls ${TRAVIS_BUILD_DIR}/deployment

deploy:
  provider: releases # GitHub
  api_key:
    secure: ${GH_PERSONAL_ACCESS_TOKEN}
  file_glob: ON # to use wildcards
  file: deployment/*
  skip_cleanup: ON
  on:
    tags: ON
    condition: ${CXX} == "clang++" # I guess I have to pick one compiler

notifications:
  slack:
    rooms:
      - secure: R8PUXsLnyFyeXma3vlEG8igF6jy41sd4z3JY/MvllJGySHkPfBWoNbNMg5a9oLexHysnJdC5OnnXJi8F1Cq904qmHx4gf+cHFGvlVMBKWb4pFNhrn7N+15TzC/t+xobFljzGzRdYlycAYYwh2FMtMCqmfvKL/0ujSCuUA4I6cdUTG7m5fzeGVWRM+mG8D1Zp+dn6svKlm3dI1jFMQY7GHYh5GUrTahdfsocDEfSy8/mydz2hEtKeeBRzs7n96/ho2PEHeJB5o+eLUpODEk179SkAd+FI96xLLdx74CHNcdiBXB5sVQNg8xusg0PDrlF2nldvqvwja9k/88f2W3Tr6fReRJ+LfeCXz8fxtGduYnh3k3VPzHDLYJblMkEvRs8hbIk3FTH5E0k5ScGAaOz/HbOxg3GTBHwNjmQoGVKMCi3IqEMoEWomdTzlXmKvGfiSpVu61kgit9yP/B1KFhV2OobHFWaBq7wjs0NTc8P0fi3ZHubxr1eqMUlWGzR28gsdUM0w1AVFLqtVWqZJGFnrPyJ3Fa13UJFUn/PpgImYtz4/KteGNJVUuhVm1h581IrSi3uVpQ1DTSwd4Bbph6JRecobaKetc/so++8yvHDi+yw3Bs8of3D2GyH9A4j1SPMBFuQaJXechKDZZeZkAzXxOTo8slS6J4Euyc6sO3Dyd1Y=
    on_success: always
